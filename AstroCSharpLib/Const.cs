using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using AstroCSharpLib.Model;

namespace AstroCSharpLib
{
    public partial class CALC
    {
        public const double rPi = 3.14159265358979323846;
        public const double rPi2 = rPi * 2.0;
        public const double rPiHalf = (rPi / 2.0);
        public const double rDegMax = 360.0;
        public const double rDegHalf = 180.0;
        public const double rDegQuad = 90.0;
        public const double rDegRad = (rDegHalf / rPi);
        public const double rEpoch2000 = (-24.736467);
        public const double rAxis = 23.44578889;
        public const double rSmall = 1.7453E-09;
        public const double rLarge = 10000.0;
        public const double rRound = 0.5;

        static readonly byte[] rErrorCount = new byte[oPlu - oJup + 1] { 11, 5, 4, 4, 4 };
        static readonly byte[] rErrorOffset = new byte[oPlu - oJup + 1] { 0, 72, 72 + 51, 72 + 51 + 42, 72 + 51 + 42 + 42 };
        static readonly double[] rErrorData = new double[72 + 51 + 42 * 3]{
            -.001,-.0005,.0045,.0051,581.7,-9.7,-.0005,2510.7,-12.5,-.0026,1313.7,-61.4,
            0.0013,2370.79,-24.6,-.0013,3599.3,37.7,-.001,2574.7,31.4,-.00096,6708.2,
            -114.5,-.0006,5499.4,-74.97,-.0013,1419,54.2,.0006,6339.3,-109,.0007,4824.5,
            -50.9,.0020,-.0134,.0127,-.0023,676.2,.9,.00045,2361.4,174.9,.0015,1427.5,
            -188.8,.0006,2110.1,153.6,.0014,3606.8,-57.7,-.0017,2540.2,121.7,-.00099,
            6704.8,-22.3,-.0006,5480.2,24.5,.00096,1651.3,-118.3,.0006,6310.8,-4.8,.0007,
            4826.6,36.2, /* Jupiter error */

            -.0009,.0037,0,.0134,1238.9,-16.4,-.00426,3040.9,-25.2,.0064,1835.3,36.1,
            -.0153,610.8,-44.2,-.0015,2480.5,-69.4,-.0014,.0026,0,.0111,1242.2,78.3,
            -.0045,3034.96,62.8,-.0066,1829.2,-51.5,-.0078,640.6,24.2,-.0016,2363.4,
            -141.4,.0006,-.0002,0,-.0005,1251.1,43.7,.0005,622.8,13.7,.0003,1824.7,-71.1,
            .0001,2997.1,78.2, /* Saturn error */

            -.0021,-.0159,0,.0299,422.3,-17.7,-.0049,3035.1,-31.3,-.0038,945.3,60.1,
            -.0023,1227,-4.99,.0134,-.02186,0,.0317,404.3,81.9,-.00495,3037.9,57.3,.004,
            993.5,-54.4,-.0018,1249.4,79.2,-.0003,.0005,0,.0005,352.5,-54.99,.0001,3027.5,
            54.2,-.0001,1150.3,-88, /* Uranus error */

            0.1832,-.6718,.2726,-.1923,175.7,31.8,.0122,542.1,189.6,.0027,1219.4,178.1,
            -.00496,3035.6,-31.3,-.1122,.166,-.0544,-.00496,3035.3,58.7,.0961,177.1,-68.8,
            -.0073,630.9,51,-.0025,1236.6,78,.00196,-.0119,.0111,.0001,3049.3,44.2,-.0002,
            893.9,48.5,.00007,1416.5,-25.2, /* Neptune error */

            -.0426,.073,-.029,.0371,372,-331.3,-.0049,3049.6,-39.2,-.0108,566.2,318.3,
            0.0003,1746.5,-238.3,-.0603,.5002,-.6126,.049,273.97,89.97,-.0049,3030.6,61.3,
            0.0027,1075.3,-28.1,-.0007,1402.3,20.3,.0145,-.0928,.1195,.0117,302.6,-77.3,
            0.00198,528.1,48.6,-.0002,1000.4,-46.1 /* Pluto error */
        };

        static readonly double[] rStarData = new double[cStar * 6] {
             1,37,42.9,-57,14,12,   2,31,50.5, 89,15,51,   3,17,46.1,-62,34,32,
             3,49,11.1, 24, 8,12,   4,35,55.2, 16,30,33,   5,16,41.3, 45,59,53,
             5,14,32.2, -8,12, 6,   5,25, 7.8,  6,20,59,   5,26,17.5, 28,36,27,
             5,36,12.7, -1,12, 7,   5,55,10.3,  7,24,25,   5,59,31.7, 44,56,51,
             6,22,41.9,-17,57,22,   6,23,57.2,-52,41,44,   6,37,42.7, 16,23,57,
             6,45, 8.9,-16,42,58,   6,58,37.5,-28,58,20,   7, 8,23.4,-26,23,35,
             7,34,35.9, 31,53,18,   7,39,18.1,  5,13,30,   7,45,18.9, 28, 1,34,
             8, 9,31.9,-47,20,12,   8,22,30.8,-59,30,34,   9,13,12.1,-69,43, 2,
             9,27,35.2, -8,39,31,  10, 8,22.3, 11,58, 2,  11, 3,43.6, 61,45, 3,
            12,26,35.9,-63, 5,56,  12,31, 9.9,-57, 6,47,  12,47,43.3,-59,41,19,
            12,54, 1.7, 55,57,35,  13,25,11.5,-11, 9,41,  13,47,32.3, 49,18,48,
            14, 3,49.4,-60,22,22,  14,15,39.6, 19,10,57,  14,39,36.2,-60,50, 7,
            16,29,24.4,-26,25,55,  17,33,36.4,-37, 6,13,  17,37,19.0,-42,59,52,
            18,24,10.3,-34,23, 5,  18,36,56.2, 38,47, 1,  19,50,46.9,  8,52, 6,
            20,25,38.8,-56,44, 7,  20,41,25.8, 45,16,49,  22, 8,13.9,-46,57,40,
            22,57,39.0,-29,37,20,   0,42, 7.0, 41,16, 0
       };

        static readonly double[,] rgoeData = new double[,]{
            {358.4758,35999.0498,-.0002,.01675,-.4E-4,0,1,101.2208,1.7192,.00045,0,0,0,0,
            0,0}, /* Earth/Sun */
            {102.2794,149472.515,0,.205614,.2E-4,0,.3871,28.7538,.3703,.0001,47.1459,
            1.1852,0.0002,7.009,.00186,0}, /* Mercury */
            {212.6032,58517.8039,.0013,.00682,-.5E-4,0,.7233,54.3842,.5082,-.14E-2,
            75.7796,0.8999,.4E-3,3.3936,.1E-2,0}, /* Venus */
            {319.5294,19139.8585,.2E-3,.09331,.9E-4,0,1.5237,285.4318,1.0698,.1E-3,
            48.7864,0.77099,0,1.8503,-.7E-3,0}, /* Mars */

            {225.4928,3033.6879,0,.04838,-.2E-4,0,5.2029,273.393,1.3383,0,99.4198,1.0583,
            0,1.3097,-.52E-2,0}, /* Jupiter */
            {174.2153,1223.50796,0,.05423,-.2E-3,0,9.5525,338.9117,-.3167,0,112.8261,
            .8259,0,2.4908,-.0047,0}, /* Saturn */
            {74.1757,427.2742,0,.04682,.00042,0,19.2215,95.6863,2.0508,0,73.5222,.5242,0,
            0.7726,.1E-3,0}, /* Uranus */
            {30.13294,240.45516,0,.00913,-.00127,0,30.11375,284.1683,-21.6329,0,130.68415,
            1.1005,0,1.7794,-.0098,0}, /* Neptune */
            {229.781,145.1781,0,.24797,.002898,0,39.539,113.5366,.2086,0,108.944,1.3739,0,
            17.1514,-.0161,0}, /* Pluto */

            {34.6127752,713.5756219,0,.382270369,-.004694073,0,13.66975144,337.407213,
            2.163306646,0,208.1482658,1.247724355,0,6.911179715,.011236955,0}, /* Chiron */
            {108.2925,7820.36556,0,.0794314,0,0,2.7672273,71.0794444,0,0,80.23555556,
            1.3960111,0,10.59694444,0,0}, /* Ceres */
            {106.6641667,7806.531667,0,.2347096,0,0,2.7704955,310.166111,0,0,172.497222,
            1.39601111,0,34.81416667,0,0}, /* Pallas Athena */
            {267.685,8256.081111,0,.2562318,0,0,2.6689897,245.3752778,0,0,170.137777,
            1.396011111,.0003083333,13.01694444,0,0}, /* Juno */
            {138.7733333,9924.931111,0,.0902807,0,0,2.360723,149.6386111,0,0,103.2197222,
            1.396011111,.000308333,7.139444444,0,0}, /* Vesta */

            {104.5959,138.5369,0,0,0,0,40.99837, 0,0,0,0,0,0,0,0,0}, /* Cupido   */
            {337.4517,101.2176,0,0,0,0,50.667443,0,0,0,0,0,0,0,0,0}, /* Hades    */
            {104.0904,80.4057, 0,0,0,0,59.214362,0,0,0,0,0,0,0,0,0}, /* Zeus     */
            {17.7346, 70.3863, 0,0,0,0,64.816896,0,0,0,0,0,0,0,0,0}, /* Kronos   */
            {138.0354,62.5,    0,0,0,0,70.361652,0,0,0,0,0,0,0,0,0}, /* Apollon  */
            {-8.678,  58.3468, 0,0,0,0,73.736476,0,0,0,0,0,0,0,0,0}, /* Admetos  */
            {55.9826, 54.2986, 0,0,0,0,77.445895,0,0,0,0,0,0,0,0,0}, /* Vulkanus */
            {165.3595,48.6486, 0,0,0,0,83.493733,0,0,0,0,0,0,0,0,0}  /* Poseidon */
        };

        private static List<OrbitalElements> _rgoe;
        private static List<OrbitalElements> rgoe
        {
            get
            {
                if (_rgoe == null)
                {
                    _rgoe = new List<OrbitalElements>();
                    for (int i = 0; i < rgoeData.GetLength(0); i++)
                    {
                        _rgoe.Add(new OrbitalElements
                        {
                            ma0 = rgoeData[i, 0],
                            ma1 = rgoeData[i, 1],
                            ma2 = rgoeData[i, 2],  /* Mean anomaly.           */
                            ec0 = rgoeData[i, 3],
                            ec1 = rgoeData[i, 4],
                            ec2 = rgoeData[i, 5], /* Eccentricity.           */
                            sma = rgoeData[i, 6], /* Semi-major axis.        */
                            ap0 = rgoeData[i, 7],
                            ap1 = rgoeData[i, 8],
                            ap2 = rgoeData[i, 9], /* Argument of perihelion. */
                            an0 = rgoeData[i, 10],
                            an1 = rgoeData[i, 11],
                            an2 = rgoeData[i, 12], /* Ascending node.         */
                            in0 = rgoeData[i, 13],
                            in1 = rgoeData[i, 14],
                            in2 = rgoeData[i, 15], /* Inclination.            */
                        });
                    }
                }
                return _rgoe;
            }
        }
    }
}
